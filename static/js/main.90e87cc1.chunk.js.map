{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","api.ts","app/hooks.ts","components/ErrorNote/ErrorNote.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","status","query","filterReducer","filter","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useAppDispatch","useDispatch","useAppSelector","useSelector","ErrorNote","text","className","TodoList","React","memo","dispatch","todosToShow","useMemo","newTodos","title","toLowerCase","includes","completed","length","map","id","classNames","onClick","showModal","TodoFilter","searchValue","handleInput","value","handleSelect","onSubmit","event","preventDefault","onChange","currentTarget","placeholder","target","style","pointerEvents","Loader","TodoModal","useState","isLoading","setIsLoading","isError","setIsError","currentUser","setCurrentUser","loadUser","a","userId","user","useEffect","href","email","name","App","loadTodos","todosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90e87cc1.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n\n    case 'currentTodo/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type Filter = {\n  query: string,\n  status: string,\n};\n\ntype FilterStatus = {\n  type: 'filter/STATUS';\n  query: string;\n  status: string,\n};\ntype FilterQuery = {\n  type: 'filter/QUERY';\n  query: string;\n  status: string,\n};\ntype FilterClear = {\n  type: 'filter/CLEAR';\n  query: string;\n  status: string,\n};\n\ntype Action = FilterStatus\n| FilterQuery\n| FilterClear;\n\nconst filterStatus = (status: string, query = ''): FilterStatus => ({\n  type: 'filter/STATUS',\n  query,\n  status,\n});\nconst filterQuery = (query: string, status = 'all'): FilterQuery => ({\n  type: 'filter/QUERY',\n  query,\n  status,\n});\n\nconst filterClear = (status = 'all', query = ''): FilterClear => ({\n  type: 'filter/CLEAR',\n  query,\n  status,\n});\n\nexport const actions = { filterStatus, filterQuery, filterClear };\n\nconst filterReducer = (\n  filter: Filter = { query: '', status: 'all' },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/STATUS':\n      return { ...filter, status: action.status };\n\n    case 'filter/QUERY':\n      return { ...filter, query: action.query };\n\n    case 'filter/CLEAR':\n      return { ...filter, query: '' };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: SetTodosAction,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","type Props = {\n  text: string;\n};\n\nexport const ErrorNote: React.FC<Props> = ({ text }) => {\n  return (\n    <p className=\"notification is-warning\">\n      {text}\n    </p>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { ErrorNote } from '../ErrorNote';\n\nexport const TodoList = React.memo(() => {\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n  const showModal = (todo: Todo) => dispatch(actions.setTodo(todo));\n\n  const todosToShow = useMemo(() => {\n    const newTodos = todos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    switch (status) {\n      case 'active':\n        return newTodos.filter(todo => !todo.completed);\n      case 'completed':\n        return newTodos.filter(todo => todo.completed);\n      case 'all':\n        return newTodos;\n\n      default:\n        return todos;\n    }\n  }, [query, status, todos]);\n\n  return (\n    <>\n      {!todosToShow.length\n        ? (\n          <ErrorNote\n            text=\"There are no todos matching current filter criteria\"\n          />\n        )\n\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todosToShow.map(todo => {\n                const { title, id, completed } = todo;\n\n                return (\n                  <tr\n                    data-cy=\"todo\"\n                    key={id}\n                    className={classNames({\n                      'has-background-info-light': currentTodo?.id === id,\n                    })}\n                  >\n                    <td className=\"is-vcentered\">{id}</td>\n                    <td className=\"is-vcentered\">\n                      {completed\n                        && (\n                          <span className=\"icon\" data-cy=\"iconCompleted\">\n                            <i className=\"fas fa-check\" />\n                          </span>\n                        )}\n                    </td>\n\n                    <td className=\"is-vcentered is-expanded\">\n                      <p className={classNames({\n                        'has-text-danger': !completed,\n                        'has-text-success': completed,\n                      })}\n                      >\n                        {title}\n                      </p>\n                    </td>\n\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => showModal(todo)}\n                      >\n                        <span className=\"icon\">\n                          <i className={classNames(\n                            'far',\n                            {\n                              'fa-eye': currentTodo?.id !== id,\n                              'fa-eye-slash': currentTodo?.id === id,\n                            },\n                          )}\n                          />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n});\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const searchValue = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const status = (value: string) => dispatch(actions.filterStatus(value));\n  const query = (value: string) => dispatch(actions.filterQuery(value));\n  const clear = () => dispatch(actions.filterClear());\n\n  const handleInput = (value: string) => {\n    query(value);\n  };\n\n  const handleSelect = (value: string) => {\n    status(value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => handleSelect(event.currentTarget.value)}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue.query}\n          onChange={(event) => handleInput(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchValue.query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"button\"\n              onClick={clear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { actions } from '../../features/currentTodo';\nimport { ErrorNote } from '../ErrorNote';\n\nexport const TodoModal = React.memo(() => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [currentUser, setCurrentUser] = useState<User>();\n\n  const removeTodo = () => dispatch(actions.removeTodo());\n\n  const loadUser = async () => {\n    try {\n      if (!currentTodo) {\n        return;\n      }\n\n      const user = await getUser(currentTodo.userId);\n\n      setCurrentUser(user);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && <Loader />}\n      {isError && <ErrorNote text=\"unable to download todo\" />}\n\n      {!isLoading && !isError && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"button\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${currentUser?.email}`}>{currentUser?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useEffect, useState } from 'react';\nimport { actions } from './features/todos';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { ErrorNote } from './components/ErrorNote';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const loadTodos = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      dispatch(actions.setTodos(todosFromServer));\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && !isError && <TodoList />}\n            </div>\n\n            {isError && <ErrorNote text=\"unable to download todos\" />}\n\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}